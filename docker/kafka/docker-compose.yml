networks:
  default:
    name: ${PROJECT_NAME}-network
    external: true

services:
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: ${PROJECT_NAME}-kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    restart: on-failure:5
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100
        
  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.0
    hostname: zookeeper
    container_name: ${PROJECT_NAME}-zookeeper
    ports:
      - '${ZOOKEEPER_CLIENT_PORT}:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: ${ZOOKEEPER_CLIENT_PORT}
      ZOOKEEPER_TICK_TIME: ${ZOOKEEPER_TICK_TIME}

  kafka-rest:
    image: confluentinc/cp-kafka-rest:7.2.0
    hostname: kafka-rest
    container_name: ${PROJECT_NAME}-kafka-rest
    ports:
      - "${KAFKA_REST_PORT}:8082"
    depends_on:
      - kafka
    environment:
      KAFKA_REST_BOOTSTRAP_SERVERS: ${KAFKA_REST_BOOTSTRAP_SERVERS}
      KAFKA_REST_ZOOKEEPER_CONNECT: ${KAFKA_REST_ZOOKEEPER_CONNECT}
      KAFKA_REST_SCHEMA_REGISTRY_URL: ${KAFKA_REST_SCHEMA_REGISTRY_URL}
      KAFKA_REST_HOST_NAME: ${KAFKA_REST_HOST_NAME}
      KAFKA_REST_LISTENERS: ${KAFKA_REST_LISTENERS}

  kafka-exporter:
    image: danielqsj/kafka-exporter:latest
    container_name: ${PROJECT_NAME}-kafka-exporter
    ports:
      - "9308:9308"
    command: ["--kafka.server=kafka:29092"]
    depends_on:
      - kafka
      - zookeeper
        